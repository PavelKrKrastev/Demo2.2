@model PagedList.IPagedList<ManageEmployees.Models.Employee>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Employee";
}

<h2>People in company</h2>

<p>
    @Html.ActionLink("Add employee", "Create", null, new { @class = "btn btn-success btn-sm" })
</p>

@using (Html.BeginForm("Index", "Employees", FormMethod.Get))
{ <p>
        Find by First/Last name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p> }

<table class="table">
    <tr>
    <tr>
        @*Uses the information in the ViewBag properties to set up hyperlinks with the appropriate query string values.*@
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSort })
        </th>
        <th>
            Last Name
        </th>
        <th>
            @Html.ActionLink("Position", "Index", new { sortOrder = ViewBag.PositionSort })
        </th>
        <th>
            Salary
        </th>
        <th>
            Phone
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Salary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID })
            </td>
        </tr>
    }

</table>
<br /> Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of
@Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new
    {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter =
            ViewBag.CurrentFilter
    }))
